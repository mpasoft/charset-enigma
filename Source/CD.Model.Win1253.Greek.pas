unit CD.Model.Win1253.Greek;

interface

uses
  CD.Model.Greek;

type
  TWindows_1253_GreekModel = class(TGreekModel)
  protected
    // Generated by BuildLangModel.py
    // On: 2016-05-25 15:21:50.073117

    // Character Mapping Table:
    // ILL: illegal character.
    // CTR: control character specific to the charset.
    // RET: carriage/return.
    // SYM: symbol (punctuation) that does not belong to word.
    // NUM: 0 - 9.
    //
    // Other characters are ordered by probabilities
    // (0 is the most common character in the language).
    //
    // Orders are generic to a language.So the codepoint with order X in
    // CHARSET1 maps to the same character as the codepoint with the same
    // order X in CHARSET2 for the same language.
    // As such, it is possible to get missing order.For instance the
    // ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
    // even though they are both used for French.Same for the euro sign.

    // Character Mapping Table:
    function WIN1253__CHAR_TO_ORDER_MAP: TArray<Byte>;
  public
    constructor Create;
  end;

implementation

uses
  CD.Prober.SBCSGroup;

{ TWindows_1253_GreekModel }

constructor TWindows_1253_GreekModel.Create;
begin
  inherited Create(WIN1253__CHAR_TO_ORDER_MAP, 'windows-1253');
end;

function TWindows_1253_GreekModel.WIN1253__CHAR_TO_ORDER_MAP: TArray<Byte>;
begin
  { TODO -oOwner -cGeneral : Проверить таблицу }
  Result := [{$I  ..\Source\inc\WIN1253__CHAR_TO_ORDER_MAP.inc}];
end;

initialization
  TSBCSGroupProber.RegisterModel(
    function(): ISequenceModel
    begin
      Result := TWindows_1253_GreekModel.Create();
    end);

end.

